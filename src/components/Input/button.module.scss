.textbox {
   position: relative;
   z-index: var(--z-index-1);
   border-radius: var(--border-radius-4);
   width: fit-content;
   overflow: hidden;
}

.textbox:focus-within {
   z-index: var(--z-index-2); /* Stack `.textbox` over its sibling elements */
}

.disabled,
.disabled * {
   cursor: not-allowed;
}

.input {
   display: flex;
   align-items: center;
   min-width: var(--space-24);
   width: fit-content;
   height: var(--space-24);
   // padding: var(--space-0) calc(var(--space-8) - var(--border-width-1));
   border: var(--border-width-1) solid transparent;
   background-color: var(--figma-color-bg-secondary);
   color: var(--figma-color-text);

   &:has(:global(.text)) {
      padding-right: var(--space-8);
   }
   &:not(:has(.icon)) {
      padding-left: var(--space-8);
   }
}
.input:hover {
   // background: var(--figma-color-border);
   filter: brightness(1.2);
}
.active {
   background: var(--figma-color-bg-brand-tertiary);

   & :global(.text) {
      color: var(--figma-color-border-brand-strong);
   }
}
.input:focus {
   background: var(--figma-color-border-selected);
}
.disabled .input {
   border-color: var(--figma-color-border-disabled);
   background-color: transparent;
   color: var(--figma-color-text-disabled);
}
// .hasIcon .input {
//    padding-left: calc(var(--space-24) - var(--border-width-1));
// }

.input::placeholder {
   color: var(--figma-color-text-tertiary);
}

.icon {
   // position: absolute;
   pointer-events: none;
   text-align: center;
   // top: 0;
   // left: var(--space-4);
   // left: 1px;
   background-size: 115%;
   background-repeat: no-repeat;
}
.disabled .icon {
   color: var(--figma-color-icon-disabled);
   opacity: 0.5;
}

.icon svg {
   fill: currentColor;
}
